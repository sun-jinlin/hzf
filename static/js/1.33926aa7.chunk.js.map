{"version":3,"sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js"],"names":["module","exports","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_typeof","assertThisInitialized","self","call","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","create","constructor","_extends","assign","arguments","source","hasOwnProperty","apply","this","objectWithoutPropertiesLoose","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","createDetectElementResize","nonce","hostWindow","_window","attachEvent","window","global","document","requestFrame","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","id","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","width","offsetWidth","height","offsetHeight","scrollListener","e","className","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","forEach","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","createElement","undefined","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","position","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","push","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","arr","len","arr2","Array","arrayLikeToArray","minLen","n","toString","slice","name","from","test","componentWillMount","state","getDerivedStateFromProps","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","toVal","mix","k","y","str","isArray","tmp","x","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","keys","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","scrollbarSize","recalc","canUseDOM","scrollDiv","top","overflow","body","clientWidth","_class","_temp","request","oRequestAnimationFrame","msRequestAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","root","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","Symbol","iterator","_setPrototypeOf","sourceKeys","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","iter","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_arr","_n","_d","_e","_s","_i","next","done","err"],"mappings":"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","file":"static/js/1.33926aa7.chunk.js","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;"],"sourceRoot":""}